{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igorf\\\\Desktop\\\\react-landing-page\\\\src\\\\components\\\\sections\\\\Algorithm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Algorithm.css';\nimport Section from '../common/Section';\nimport Button from '../common/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Algorithm = () => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [position, setPosition] = useState(0);\n  const containerRef = useRef(null);\n  const cardWidth = useRef(0);\n  const totalCards = useRef(0);\n\n  // Check if we're on desktop\n  useEffect(() => {\n    const checkIfDesktop = () => {\n      setIsDesktop(window.innerWidth >= 1024);\n    };\n    checkIfDesktop();\n    window.addEventListener('resize', checkIfDesktop);\n    return () => window.removeEventListener('resize', checkIfDesktop);\n  }, []);\n\n  // Initialize card measurements and autoplay\n  useEffect(() => {\n    if (containerRef.current) {\n      const cards = containerRef.current.querySelectorAll('.algorithm-card');\n      if (cards.length > 0) {\n        cardWidth.current = cards[0].offsetWidth + parseInt(getComputedStyle(cards[0]).marginRight);\n        totalCards.current = algorithmSteps.length;\n      }\n    }\n\n    // Setup autoplay for the carousel\n    const autoplayInterval = setInterval(() => {\n      if (!isDragging && !isDesktop) {\n        moveCarousel(-1); // Move one card to the left\n      }\n    }, 3000);\n    return () => clearInterval(autoplayInterval);\n  }, [isDragging, isDesktop]);\n\n  // Function to move the carousel\n  const moveCarousel = direction => {\n    const newPosition = position + direction * cardWidth.current;\n\n    // If we've gone past the beginning, jump to the end\n    if (newPosition > 0) {\n      setPosition(-cardWidth.current * (totalCards.current - 1));\n    }\n    // If we've gone past the end, jump to the beginning\n    else if (newPosition < -cardWidth.current * (totalCards.current - 1)) {\n      setPosition(0);\n    }\n    // Normal movement\n    else {\n      setPosition(newPosition);\n    }\n  };\n\n  // Sample algorithm steps data\n  const algorithmSteps = [{\n    id: 1,\n    title: \"Создаст персональное резюме\"\n  }, {\n    id: 2,\n    title: \"Выделит ваши сильные стороны\"\n  }, {\n    id: 3,\n    title: \"Привлечет работодателей уже через несколько часов\"\n  }];\n  const handleMouseDown = e => {\n    if (isDesktop) return;\n    setIsDragging(true);\n    setStartX(e.pageX - containerRef.current.offsetLeft);\n    setScrollLeft(position);\n  };\n  const handleTouchStart = e => {\n    if (isDesktop) return;\n    setIsDragging(true);\n    setStartX(e.touches[0].pageX - containerRef.current.offsetLeft);\n    setScrollLeft(position);\n  };\n  const handleMouseMove = e => {\n    if (!isDragging || isDesktop) return;\n    e.preventDefault();\n    const x = e.pageX - containerRef.current.offsetLeft;\n    const walk = x - startX; // Drag distance\n\n    // Apply transform during drag\n    if (containerRef.current) {\n      containerRef.current.style.transform = `translateX(${scrollLeft + walk}px)`;\n    }\n  };\n  const handleTouchMove = e => {\n    if (!isDragging || isDesktop) return;\n    const x = e.touches[0].pageX - containerRef.current.offsetLeft;\n    const walk = x - startX;\n    if (containerRef.current) {\n      containerRef.current.style.transform = `translateX(${scrollLeft + walk}px)`;\n    }\n  };\n  const handleMouseUp = e => {\n    if (isDesktop) return;\n    setIsDragging(false);\n    if (containerRef.current) {\n      var _e$touches, _e$touches$;\n      // Calculate how far we dragged\n      const x = e ? (e.pageX || ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : (_e$touches$ = _e$touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.pageX)) - containerRef.current.offsetLeft : 0;\n      const walk = x ? x - startX : 0;\n\n      // Determine which direction to snap to\n      if (Math.abs(walk) > cardWidth.current / 3) {\n        const direction = walk > 0 ? 1 : -1; // 1 for right, -1 for left\n        moveCarousel(direction);\n      } else {\n        // Snap back to the current position\n        setPosition(position);\n      }\n\n      // Reset the immediate transform to let the animation take over\n      containerRef.current.style.transform = '';\n      // Apply the position via class styles with transition\n      containerRef.current.style.transform = `translateX(${position}px)`;\n    }\n  };\n  const handleMouseLeave = () => {\n    if (isDragging && !isDesktop) {\n      handleMouseUp();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"algorithm-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title accent\",\n        children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u043C\\u0438 \\u0440\\u0435\\u043A\\u0440\\u0443\\u0442\\u0435\\u0440\\u0430\\u043C\\u0438 \\u0438 HR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-flex\",\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseLeave,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleMouseUp,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cards-container ${isDragging ? 'dragging' : ''}`,\n          ref: containerRef,\n          style: {\n            transform: `translateX(${position}px)`,\n            transition: isDragging ? 'none' : 'transform 0.3s ease'\n          },\n          children: [algorithmSteps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"algorithm-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"like\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/img/svg/like.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, `step-${step.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)), !isDesktop && algorithmSteps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"algorithm-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"like\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/img/svg/like.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, `step-dup-${step.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), !isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-dots\",\n        children: algorithmSteps.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dot ${Math.abs(position / cardWidth.current) % totalCards.current === index ? 'active' : ''}`,\n          onClick: () => setPosition(-index * cardWidth.current)\n        }, `dot-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Algorithm, \"5c2OnXhDTFttqcgNW3YwtSp1rdE=\");\n_c = Algorithm;\nexport default Algorithm;\nvar _c;\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Section","Button","jsxDEV","_jsxDEV","Algorithm","_s","isDragging","setIsDragging","startX","setStartX","scrollLeft","setScrollLeft","isDesktop","setIsDesktop","position","setPosition","containerRef","cardWidth","totalCards","checkIfDesktop","window","innerWidth","addEventListener","removeEventListener","current","cards","querySelectorAll","length","offsetWidth","parseInt","getComputedStyle","marginRight","algorithmSteps","autoplayInterval","setInterval","moveCarousel","clearInterval","direction","newPosition","id","title","handleMouseDown","e","pageX","offsetLeft","handleTouchStart","touches","handleMouseMove","preventDefault","x","walk","style","transform","handleTouchMove","handleMouseUp","_e$touches","_e$touches$","Math","abs","handleMouseLeave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","ref","transition","map","step","src","alt","_","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Igorf/Desktop/react-landing-page/src/components/sections/Algorithm.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport './Algorithm.css';\r\nimport Section from '../common/Section';\r\nimport Button from '../common/Button';\r\n\r\nconst Algorithm = () => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [startX, setStartX] = useState(0);\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const [isDesktop, setIsDesktop] = useState(false);\r\n  const [position, setPosition] = useState(0);\r\n  const containerRef = useRef(null);\r\n  const cardWidth = useRef(0);\r\n  const totalCards = useRef(0);\r\n  \r\n  // Check if we're on desktop\r\n  useEffect(() => {\r\n    const checkIfDesktop = () => {\r\n      setIsDesktop(window.innerWidth >= 1024);\r\n    };\r\n    \r\n    checkIfDesktop();\r\n    window.addEventListener('resize', checkIfDesktop);\r\n    \r\n    return () => window.removeEventListener('resize', checkIfDesktop);\r\n  }, []);\r\n  \r\n  // Initialize card measurements and autoplay\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const cards = containerRef.current.querySelectorAll('.algorithm-card');\r\n      if (cards.length > 0) {\r\n        cardWidth.current = cards[0].offsetWidth + parseInt(getComputedStyle(cards[0]).marginRight);\r\n        totalCards.current = algorithmSteps.length;\r\n      }\r\n    }\r\n    \r\n    // Setup autoplay for the carousel\r\n    const autoplayInterval = setInterval(() => {\r\n      if (!isDragging && !isDesktop) {\r\n        moveCarousel(-1); // Move one card to the left\r\n      }\r\n    }, 3000);\r\n    \r\n    return () => clearInterval(autoplayInterval);\r\n  }, [isDragging, isDesktop]);\r\n  \r\n  // Function to move the carousel\r\n  const moveCarousel = (direction) => {\r\n    const newPosition = position + direction * cardWidth.current;\r\n    \r\n    // If we've gone past the beginning, jump to the end\r\n    if (newPosition > 0) {\r\n      setPosition(-cardWidth.current * (totalCards.current - 1));\r\n    } \r\n    // If we've gone past the end, jump to the beginning\r\n    else if (newPosition < -cardWidth.current * (totalCards.current - 1)) {\r\n      setPosition(0);\r\n    } \r\n    // Normal movement\r\n    else {\r\n      setPosition(newPosition);\r\n    }\r\n  };\r\n  \r\n  // Sample algorithm steps data\r\n  const algorithmSteps = [\r\n    {\r\n      id: 1,\r\n      title: \"Создаст персональное резюме\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Выделит ваши сильные стороны\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Привлечет работодателей уже через несколько часов\",\r\n    }\r\n  ];\r\n\r\n  const handleMouseDown = (e) => {\r\n    if (isDesktop) return;\r\n    setIsDragging(true);\r\n    setStartX(e.pageX - containerRef.current.offsetLeft);\r\n    setScrollLeft(position);\r\n  };\r\n\r\n  const handleTouchStart = (e) => {\r\n    if (isDesktop) return;\r\n    setIsDragging(true);\r\n    setStartX(e.touches[0].pageX - containerRef.current.offsetLeft);\r\n    setScrollLeft(position);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging || isDesktop) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - containerRef.current.offsetLeft;\r\n    const walk = (x - startX); // Drag distance\r\n    \r\n    // Apply transform during drag\r\n    if (containerRef.current) {\r\n      containerRef.current.style.transform = `translateX(${scrollLeft + walk}px)`;\r\n    }\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (!isDragging || isDesktop) return;\r\n    const x = e.touches[0].pageX - containerRef.current.offsetLeft;\r\n    const walk = (x - startX);\r\n    \r\n    if (containerRef.current) {\r\n      containerRef.current.style.transform = `translateX(${scrollLeft + walk}px)`;\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e) => {\r\n    if (isDesktop) return;\r\n    setIsDragging(false);\r\n    \r\n    if (containerRef.current) {\r\n      // Calculate how far we dragged\r\n      const x = e ? (e.pageX || e.touches?.[0]?.pageX) - containerRef.current.offsetLeft : 0;\r\n      const walk = x ? (x - startX) : 0;\r\n      \r\n      // Determine which direction to snap to\r\n      if (Math.abs(walk) > cardWidth.current / 3) {\r\n        const direction = walk > 0 ? 1 : -1; // 1 for right, -1 for left\r\n        moveCarousel(direction);\r\n      } else {\r\n        // Snap back to the current position\r\n        setPosition(position);\r\n      }\r\n      \r\n      // Reset the immediate transform to let the animation take over\r\n      containerRef.current.style.transform = '';\r\n      // Apply the position via class styles with transition\r\n      containerRef.current.style.transform = `translateX(${position}px)`;\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (isDragging && !isDesktop) {\r\n      handleMouseUp();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"algorithm-container\">\r\n      <div className=\"container\">\r\n        <h3 className=\"section-title accent\">Алгоритм обучен профессиональными рекрутерами и HR</h3>\r\n      \r\n        <div className=\"cards-flex\"\r\n             onMouseDown={handleMouseDown}\r\n             onMouseMove={handleMouseMove}\r\n             onMouseUp={handleMouseUp}\r\n             onMouseLeave={handleMouseLeave}\r\n             onTouchStart={handleTouchStart}\r\n             onTouchMove={handleTouchMove}\r\n             onTouchEnd={handleMouseUp}>\r\n          <div \r\n            className={`cards-container ${isDragging ? 'dragging' : ''}`}\r\n            ref={containerRef}\r\n            style={{ transform: `translateX(${position}px)`, transition: isDragging ? 'none' : 'transform 0.3s ease' }}\r\n          >\r\n            {/* Display all cards in one sequence for infinite scroll effect */}\r\n            {algorithmSteps.map((step) => (\r\n              <div key={`step-${step.id}`} className=\"algorithm-card\">\r\n                <p>{step.title}</p>\r\n                <div className='like'>\r\n                  <img src=\"/img/svg/like.svg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {/* Duplicate the first few cards at the end for seamless looping */}\r\n            {!isDesktop && algorithmSteps.map((step) => (\r\n              <div key={`step-dup-${step.id}`} className=\"algorithm-card\">\r\n                <p>{step.title}</p>\r\n                <div className='like'>\r\n                  <img src=\"/img/svg/like.svg\" alt=\"\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Navigation dots for carousel */}\r\n        {!isDesktop && (\r\n          <div className=\"carousel-dots\">\r\n            {algorithmSteps.map((_, index) => (\r\n              <span \r\n                key={`dot-${index}`} \r\n                className={`dot ${Math.abs(position / cardWidth.current) % totalCards.current === index ? 'active' : ''}`}\r\n                onClick={() => setPosition(-index * cardWidth.current)}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Algorithm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}