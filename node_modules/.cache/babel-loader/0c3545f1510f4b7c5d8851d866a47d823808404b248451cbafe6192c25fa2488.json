{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igorf\\\\Desktop\\\\react-landing-page\\\\src\\\\components\\\\sections\\\\SliderSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './SliderSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderSection = () => {\n  _s();\n  const images = ['/img/slider/1.png', '/img/slider/2.png', '/img/slider/3.png', '/img/slider/4.png'\n  // Add more images as needed\n  ];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [touchStart, setTouchStart] = useState(0);\n  const [touchEnd, setTouchEnd] = useState(0);\n  const [isTouching, setIsTouching] = useState(false);\n  const [translateX, setTranslateX] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const sliderRef = useRef(null);\n\n  // Check if device is mobile on component mount\n  useEffect(() => {\n    const checkIfMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    // Initial check\n    checkIfMobile();\n\n    // Add event listener for window resize\n    window.addEventListener('resize', checkIfMobile);\n\n    // Cleanup\n    return () => window.removeEventListener('resize', checkIfMobile);\n  }, []);\n  const handleTouchStart = e => {\n    if (!isMobile) return;\n    setTouchStart(e.targetTouches[0].clientX);\n    setIsTouching(true);\n  };\n  const handleTouchMove = e => {\n    var _sliderRef$current;\n    if (!isMobile || !isTouching) return;\n    setTouchEnd(e.targetTouches[0].clientX);\n    const diff = touchStart - e.targetTouches[0].clientX;\n    const slideWidth = ((_sliderRef$current = sliderRef.current) === null || _sliderRef$current === void 0 ? void 0 : _sliderRef$current.offsetWidth) || 0;\n\n    // Calculate how far we've moved during the touch\n    const newTranslate = -(currentIndex * 100) - diff / slideWidth * 100;\n    setTranslateX(newTranslate);\n  };\n  const handleTouchEnd = () => {\n    if (!isMobile) return;\n    setIsTouching(false);\n\n    // Reset translateX to snap back to proper position\n    setTranslateX(-(currentIndex * 100));\n    if (touchStart - touchEnd > 75) {\n      // Swipe left - go to next slide\n      if (currentIndex < images.length - 1) {\n        setCurrentIndex(currentIndex + 1);\n      }\n    }\n    if (touchStart - touchEnd < -75) {\n      // Swipe right - go to previous slide\n      if (currentIndex > 0) {\n        setCurrentIndex(currentIndex - 1);\n      }\n    }\n  };\n\n  // Update translateX whenever currentIndex changes\n  useEffect(() => {\n    setTranslateX(-(currentIndex * 100));\n  }, [currentIndex]);\n\n  // Navigation functions\n  const goToNext = () => {\n    if (currentIndex < images.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n  const goToPrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  const goToSlide = index => {\n    setCurrentIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"\\u041A\\u0430\\u043A \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0441\\u0438\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435 \\u0437\\u0430 15 \\u043C\\u0438\\u043D\\u0443\\u0442?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-slider-container\",\n        ref: sliderRef,\n        children: [!isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"slider-nav-button prev\",\n          onClick: goToPrev,\n          disabled: currentIndex === 0,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-slider\",\n          style: {\n            transform: isMobile ? `translateX(${isTouching ? translateX : -(currentIndex * 100)}%)` : 'none'\n          },\n          onTouchStart: handleTouchStart,\n          onTouchMove: handleTouchMove,\n          onTouchEnd: handleTouchEnd,\n          children: isMobile ?\n          // For mobile: all slides in a row for swiping\n          images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: `Slide ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)) :\n          /*#__PURE__*/\n          // For desktop: only show current slide\n          _jsxDEV(\"div\", {\n            className: \"slide\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: images[currentIndex],\n              alt: `Slide ${currentIndex + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"slider-nav-button next\",\n          onClick: goToNext,\n          disabled: currentIndex === images.length - 1,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-indicator\",\n        children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `indicator-dot ${index === currentIndex ? 'active' : ''}`,\n          onClick: () => goToSlide(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-action\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button-primary button-large \",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0440\\u0435\\u0437\\u044E\\u043C\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderSection, \"KYHCqCQ/A1KFmc7Or5lAG+l8jiY=\");\n_c = SliderSection;\nexport default SliderSection;\nvar _c;\n$RefreshReg$(_c, \"SliderSection\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SliderSection","_s","images","currentIndex","setCurrentIndex","touchStart","setTouchStart","touchEnd","setTouchEnd","isTouching","setIsTouching","translateX","setTranslateX","isMobile","setIsMobile","sliderRef","checkIfMobile","window","innerWidth","addEventListener","removeEventListener","handleTouchStart","e","targetTouches","clientX","handleTouchMove","_sliderRef$current","diff","slideWidth","current","offsetWidth","newTranslate","handleTouchEnd","length","goToNext","goToPrev","goToSlide","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","disabled","style","transform","onTouchStart","onTouchMove","onTouchEnd","map","image","src","alt","_","_c","$RefreshReg$"],"sources":["C:/Users/Igorf/Desktop/react-landing-page/src/components/sections/SliderSection.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './SliderSection.css';\r\n\r\nconst SliderSection = () => {\r\n  const images = [\r\n    '/img/slider/1.png',\r\n    '/img/slider/2.png',\r\n    '/img/slider/3.png',\r\n    '/img/slider/4.png',\r\n    // Add more images as needed\r\n  ];\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [touchStart, setTouchStart] = useState(0);\r\n  const [touchEnd, setTouchEnd] = useState(0);\r\n  const [isTouching, setIsTouching] = useState(false);\r\n  const [translateX, setTranslateX] = useState(0);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const sliderRef = useRef(null);\r\n\r\n  // Check if device is mobile on component mount\r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n    \r\n    // Initial check\r\n    checkIfMobile();\r\n    \r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', checkIfMobile);\r\n    \r\n    // Cleanup\r\n    return () => window.removeEventListener('resize', checkIfMobile);\r\n  }, []);\r\n\r\n  const handleTouchStart = (e) => {\r\n    if (!isMobile) return;\r\n    setTouchStart(e.targetTouches[0].clientX);\r\n    setIsTouching(true);\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (!isMobile || !isTouching) return;\r\n    setTouchEnd(e.targetTouches[0].clientX);\r\n    \r\n    const diff = touchStart - e.targetTouches[0].clientX;\r\n    const slideWidth = sliderRef.current?.offsetWidth || 0;\r\n    \r\n    // Calculate how far we've moved during the touch\r\n    const newTranslate = -(currentIndex * 100) - (diff / slideWidth * 100);\r\n    setTranslateX(newTranslate);\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    if (!isMobile) return;\r\n    setIsTouching(false);\r\n    \r\n    // Reset translateX to snap back to proper position\r\n    setTranslateX(-(currentIndex * 100));\r\n    \r\n    if (touchStart - touchEnd > 75) {\r\n      // Swipe left - go to next slide\r\n      if (currentIndex < images.length - 1) {\r\n        setCurrentIndex(currentIndex + 1);\r\n      }\r\n    }\r\n    \r\n    if (touchStart - touchEnd < -75) {\r\n      // Swipe right - go to previous slide\r\n      if (currentIndex > 0) {\r\n        setCurrentIndex(currentIndex - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update translateX whenever currentIndex changes\r\n  useEffect(() => {\r\n    setTranslateX(-(currentIndex * 100));\r\n  }, [currentIndex]);\r\n\r\n  // Navigation functions\r\n  const goToNext = () => {\r\n    if (currentIndex < images.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  };\r\n\r\n  const goToPrev = () => {\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(currentIndex - 1);\r\n    }\r\n  };\r\n\r\n  const goToSlide = (index) => {\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-section\">\r\n      <div className='container'>\r\n      <h3 className=\"section-title\">Как создать сильное резюме за 15 минут?</h3>\r\n      \r\n      <div className=\"custom-slider-container\" ref={sliderRef}>\r\n        {!isMobile && (\r\n          <button \r\n            className=\"slider-nav-button prev\" \r\n            onClick={goToPrev}\r\n            disabled={currentIndex === 0}\r\n          >\r\n            &lt;\r\n          </button>\r\n        )}\r\n        \r\n        <div \r\n          className=\"custom-slider\"\r\n          style={{ \r\n            transform: isMobile ? \r\n              `translateX(${isTouching ? translateX : -(currentIndex * 100)}%)` : \r\n              'none'\r\n          }}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          {isMobile ? (\r\n            // For mobile: all slides in a row for swiping\r\n            images.map((image, index) => (\r\n              <div key={index} className=\"slide\">\r\n                <img src={image} alt={`Slide ${index + 1}`} />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            // For desktop: only show current slide\r\n            <div className=\"slide\">\r\n              <img src={images[currentIndex]} alt={`Slide ${currentIndex + 1}`} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {!isMobile && (\r\n          <button \r\n            className=\"slider-nav-button next\" \r\n            onClick={goToNext}\r\n            disabled={currentIndex === images.length - 1}\r\n          >\r\n            &gt;\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"slider-indicator\">\r\n        {images.map((_, index) => (\r\n          <div \r\n            key={index} \r\n            className={`indicator-dot ${index === currentIndex ? 'active' : ''}`}\r\n            onClick={() => goToSlide(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"slider-action\">\r\n        <button className=\"button button-primary button-large \">Создать резюме</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAG,CACb,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB;EACA;EAAA,CACD;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMoB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAGA,CAAA,KAAM;MAC1BF,WAAW,CAACG,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;IACvC,CAAC;;IAED;IACAF,aAAa,CAAC,CAAC;;IAEf;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,aAAa,CAAC;;IAEhD;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,aAAa,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,IAAI,CAACT,QAAQ,EAAE;IACfP,aAAa,CAACgB,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IACzCd,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMe,eAAe,GAAIH,CAAC,IAAK;IAAA,IAAAI,kBAAA;IAC7B,IAAI,CAACb,QAAQ,IAAI,CAACJ,UAAU,EAAE;IAC9BD,WAAW,CAACc,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IAEvC,MAAMG,IAAI,GAAGtB,UAAU,GAAGiB,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC,CAACC,OAAO;IACpD,MAAMI,UAAU,GAAG,EAAAF,kBAAA,GAAAX,SAAS,CAACc,OAAO,cAAAH,kBAAA,uBAAjBA,kBAAA,CAAmBI,WAAW,KAAI,CAAC;;IAEtD;IACA,MAAMC,YAAY,GAAG,EAAE5B,YAAY,GAAG,GAAG,CAAC,GAAIwB,IAAI,GAAGC,UAAU,GAAG,GAAI;IACtEhB,aAAa,CAACmB,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACnB,QAAQ,EAAE;IACfH,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACAE,aAAa,CAAC,EAAET,YAAY,GAAG,GAAG,CAAC,CAAC;IAEpC,IAAIE,UAAU,GAAGE,QAAQ,GAAG,EAAE,EAAE;MAC9B;MACA,IAAIJ,YAAY,GAAGD,MAAM,CAAC+B,MAAM,GAAG,CAAC,EAAE;QACpC7B,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACnC;IACF;IAEA,IAAIE,UAAU,GAAGE,QAAQ,GAAG,CAAC,EAAE,EAAE;MAC/B;MACA,IAAIJ,YAAY,GAAG,CAAC,EAAE;QACpBC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACnC;IACF;EACF,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACde,aAAa,CAAC,EAAET,YAAY,GAAG,GAAG,CAAC,CAAC;EACtC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAM+B,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI/B,YAAY,GAAGD,MAAM,CAAC+B,MAAM,GAAG,CAAC,EAAE;MACpC7B,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMgC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIhC,YAAY,GAAG,CAAC,EAAE;MACpBC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMiC,SAAS,GAAIC,KAAK,IAAK;IAC3BjC,eAAe,CAACiC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEtC,OAAA;IAAKuC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BxC,OAAA;MAAKuC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BxC,OAAA;QAAIuC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1E5C,OAAA;QAAKuC,SAAS,EAAC,yBAAyB;QAACM,GAAG,EAAE7B,SAAU;QAAAwB,QAAA,GACrD,CAAC1B,QAAQ,iBACRd,OAAA;UACEuC,SAAS,EAAC,wBAAwB;UAClCO,OAAO,EAAEV,QAAS;UAClBW,QAAQ,EAAE3C,YAAY,KAAK,CAAE;UAAAoC,QAAA,EAC9B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,eAED5C,OAAA;UACEuC,SAAS,EAAC,eAAe;UACzBS,KAAK,EAAE;YACLC,SAAS,EAAEnC,QAAQ,GACjB,cAAcJ,UAAU,GAAGE,UAAU,GAAG,EAAER,YAAY,GAAG,GAAG,CAAC,IAAI,GACjE;UACJ,CAAE;UACF8C,YAAY,EAAE5B,gBAAiB;UAC/B6B,WAAW,EAAEzB,eAAgB;UAC7B0B,UAAU,EAAEnB,cAAe;UAAAO,QAAA,EAE1B1B,QAAQ;UACP;UACAX,MAAM,CAACkD,GAAG,CAAC,CAACC,KAAK,EAAEhB,KAAK,kBACtBtC,OAAA;YAAiBuC,SAAS,EAAC,OAAO;YAAAC,QAAA,eAChCxC,OAAA;cAAKuD,GAAG,EAAED,KAAM;cAACE,GAAG,EAAE,SAASlB,KAAK,GAAG,CAAC;YAAG;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC,GADtCN,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN,CAAC;UAAA;UAEF;UACA5C,OAAA;YAAKuC,SAAS,EAAC,OAAO;YAAAC,QAAA,eACpBxC,OAAA;cAAKuD,GAAG,EAAEpD,MAAM,CAACC,YAAY,CAAE;cAACoD,GAAG,EAAE,SAASpD,YAAY,GAAG,CAAC;YAAG;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAEL,CAAC9B,QAAQ,iBACRd,OAAA;UACEuC,SAAS,EAAC,wBAAwB;UAClCO,OAAO,EAAEX,QAAS;UAClBY,QAAQ,EAAE3C,YAAY,KAAKD,MAAM,CAAC+B,MAAM,GAAG,CAAE;UAAAM,QAAA,EAC9C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN5C,OAAA;QAAKuC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BrC,MAAM,CAACkD,GAAG,CAAC,CAACI,CAAC,EAAEnB,KAAK,kBACnBtC,OAAA;UAEEuC,SAAS,EAAE,iBAAiBD,KAAK,KAAKlC,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UACrE0C,OAAO,EAAEA,CAAA,KAAMT,SAAS,CAACC,KAAK;QAAE,GAF3BA,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN5C,OAAA;QAAKuC,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BxC,OAAA;UAAQuC,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApKID,aAAa;AAAAyD,EAAA,GAAbzD,aAAa;AAsKnB,eAAeA,aAAa;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}